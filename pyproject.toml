[tool.poetry]
name = "nobutt"
version = "0.1.0"
description = "Buttplug.io Server mock to test your applications without a physical device"
authors = ["Mihail Butvin <butvin.mihail@yandex.ru>"]
license = "MIT"
readme = "README.md"

[tool.poetry.scripts]
generate = "scripts.datamodel_generate:main"

[tool.poetry.dependencies]
python = "^3.12"
websockets = "^12.0"
pydantic = "^2.7.4"


[tool.poetry.group.dev.dependencies]
coverage = "^7.5.3"
pytest = "^8.2.2"
mypy = "^1.10.0"
wemake-python-styleguide = { git = "https://github.com/wemake-services/wemake-python-styleguide", branch = "master" }
flake8-pyproject = "^1.2.3"
autopep8 = "^2.3.0"
isort = "^5.13.2"
buttplug-py = "^0.2.0"
datamodel-code-generator = { extras = ["http"], version = "^0.25.7" }
pytest-asyncio = "^0.23.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
format = "wemake"
max-line-length = 666 #  line length limit is useless when you have John and Cognitive Complexity limits
extend-ignore = "WPS305" #  I love f-strings
per-file-ignores = ["tests/**/*: WPS442"]
exclude = [
    ".venv",
    "hooks",
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
    "nobutt/spec",
]

[tool.isort]
include_trailing_comma = true
use_parentheses = true
multi_line_output = 3

[tool.autopep8]
max-line-length = 666

[tool.mypy]
strict = true
plugins = ["pydantic.mypy"]
exclude = [
    ".venv",
    "hooks",
    "^.*\\.egg$",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
    "nobutt/spec",
]


[[tool.mypy.overrides]]
module = "buttplug"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.pytest]
norecursedirs = [
    ".venv",
    "hooks",
    "*.egg",
    ".eggs",
    "dist",
    "build",
    "docs",
    ".tox",
    ".git",
    "__pycache__",
]
